name: Deploy to GitHub Pages

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

permissions:
  contents: write
  pages: write
  id-token: write
  pull-requests: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      # Build main branch if it's a push to main
      - name: Build main
        if: github.event_name == 'push'
        run: |
          # Ensure favicon exists in public directory
          if [ ! -f "public/tab_icon.png" ]; then
            echo "Error: favicon not found in public directory"
            exit 1
          fi
          npm run build
          
          # Verify favicon in build output
          if [ ! -f "dist/tab_icon.png" ]; then
            echo "Error: favicon not found in build output"
            exit 1
          fi

      # If this is a PR, build both branches
      - name: Fetch and build main branch
        if: github.event_name == 'pull_request'
        run: |
          # Store current branch name
          CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
          PR_COMMIT=$(git rev-parse HEAD)

          # First build PR branch with staging environment
          VITE_BASE_PATH=/staging/ \
          VITE_APP_ENV=staging \
          VITE_PR_NUMBER=${{ github.event.number }} \
          VITE_COMMIT_SHA=$PR_COMMIT \
          npm run build
          mkdir -p tmp-pr-dist
          mv dist/* tmp-pr-dist/ || true

          # Fetch and checkout main
          git fetch origin main:main
          git checkout main
          MAIN_COMMIT=$(git rev-parse HEAD)

          # Build main branch with production environment
          npm ci
          VITE_BASE_PATH=/ \
          VITE_APP_ENV=production \
          VITE_COMMIT_SHA=$MAIN_COMMIT \
          npm run build

          # Prepare final dist structure
          mkdir -p dist/staging

          # Move main build to root of dist
          mv dist/* dist/ || true

          # Move PR build to staging directory
          mv tmp-pr-dist/* dist/staging/ || true

          # Debug: Print directory structure
          echo "Final dist directory structure:"
          ls -la dist/
          ls -la dist/staging/

      - name: Configure GitHub Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      # Add comment only on PR
      - name: Comment on PR with staging link
        if: github.event_name == 'pull_request'
        uses: mshick/add-pr-comment@v2
        with:
          message: |
            ðŸš€ Staging deployment is ready!
            Visit Staging: https://trainings.mashlom.me/staging/#/er
            (PR #${{ github.event.number }})
            Visit main branch: https://trainings.mashlom.me/#/er